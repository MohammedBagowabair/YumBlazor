@page "/category/Create"
@page "/category/Update/{id:int}"
@inject ICategoryRepository _categoryRepository

@if (IsProcessing)
{
    <div class="position-absolute w-75 h-75 d-flex flex-column align-items-center bg-white justify-content-center">
        <img src="/images/loading.gif" alt="loading" />
    </div>
}
else
{
    <div class="card shadow border-0 mt-4">
        <div class="card-header bg-black bg-gradient ml-0 py-3">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py-2">@(Id>0?"Update":"Create") Category</h2>
                </div>
            </div>
        </div>
        <div class="card-body p-4">
            <div class="row pb-3">
                <div class="col-12 text-end">
                    <a href="category/Create" class="btn btn-lg btn-secondary" style="width:250px;">
                        <i class="bi bi-plus-square"></i> Add New Category
                    </a>
                </div>
            </div>
            
        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }
    private bool IsProcessing { get; set; } = true;
    [SupplyParameterFromForm]
    private Category Category { get; set; } = new Category();


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadCategory();
            IsProcessing = false;
            StateHasChanged();
        }
    }
    private async Task LoadCategory()
    {
        if (Id > 0)
        {
            Category = await _categoryRepository.GetAsync(Id);

        }
    }


}
